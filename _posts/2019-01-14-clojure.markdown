---
layout: post
title: "Clojure "
date: 2019-01-14 12:03:52 -0400
comments: true
categories: clojure
---

Some quick Clojure scripts I'm collecting. Also, for
something of this I'm looking at Bob Martin's Spacewars program.

```clojure
; Working with drop-while
(drop-while empty? ["" [] "foobar" nil])
=> ("foobar" nil)

; This works left to right...
(drop-while empty? ["" [] nil "foobar"  ])
=> ("foobar")



(empty? [nil] )
=> false


(empty? nil)
=> true

(vec (sort (set [1 2 2 3])))
=> [1 2 3]


(distinct [1 2 2 3])
=> (1 2 3)


; These two kind of go together
(map-indexed vector [1 nil 3 nil])
=> ([0 1] [1 nil] [2 3] [3 nil])

; Here it gets filtered out..
(filter #(nil? (second %))
        (map-indexed vector [1 nil 3 nil])
        )
=> ([1 nil] [3 nil])


(defprotocol MyProtocol
  (-f0 [this args]))

(defn f0 [this & args]
  (-f0 this args))

(defn -f0 [this & args]
  (filter this (flatten args) )
  )

; (f0 odd? 1 2 3 4)
;=> (1 3)
;
;



```

<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.8&appId=671657696349259";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<!--  Enter text below, if you want -->
